// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SamplePrograms When_'
int main() {
  float celsius;
  int fahrenheit;
  printf("Enter temperature in Celsius: ");
  scanf("%f", &celsius);
  fahrenheit = (celsius * 9 / 5) + 32;
  printf("%.2f Celsius = %.2f Fahrenheit", celsius, fahrenheit);
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "float",
                  "isArray": false,
                  "isMemory": false,
                  "name": "celsius",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 8,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "fahrenheit",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "end": Object {
              "column": 42,
              "line": 5,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 5,
                  },
                  "raw": "\\"Enter temperature in Celsius: \\"",
                  "start": Object {
                    "column": 9,
                    "line": 5,
                  },
                  "type": "Literal",
                  "value": "\\"Enter temperature in Celsius: \\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 41,
                "line": 5,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 5,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 23,
              "line": 6,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 8,
                    "line": 6,
                  },
                  "raw": "\\"%f\\"",
                  "start": Object {
                    "column": 8,
                    "line": 6,
                  },
                  "type": "Literal",
                  "value": "\\"%f\\"",
                },
                Object {
                  "end": Object {
                    "column": 15,
                    "line": 6,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 15,
                      "line": 6,
                    },
                    "name": "celsius",
                    "start": Object {
                      "column": 15,
                      "line": 6,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 14,
                    "line": 6,
                  },
                  "type": "AddressofExpression",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "scanf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 22,
                "line": 6,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 6,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 6,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 35,
              "line": 7,
            },
            "left": Object {
              "datatype": "unknown",
              "end": Object {
                "column": 2,
                "line": 7,
              },
              "name": "fahrenheit",
              "start": Object {
                "column": 2,
                "line": 7,
              },
              "type": "Identifier",
            },
            "operator": "=",
            "right": Object {
              "end": Object {
                "column": 35,
                "line": 7,
              },
              "left": Object {
                "end": Object {
                  "column": 30,
                  "line": 7,
                },
                "left": Object {
                  "end": Object {
                    "column": 26,
                    "line": 7,
                  },
                  "left": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 16,
                      "line": 7,
                    },
                    "name": "celsius",
                    "start": Object {
                      "column": 16,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                  "operator": "*",
                  "right": Object {
                    "end": Object {
                      "column": 26,
                      "line": 7,
                    },
                    "raw": "9",
                    "start": Object {
                      "column": 26,
                      "line": 7,
                    },
                    "type": "Literal",
                    "value": "9",
                  },
                  "start": Object {
                    "column": 16,
                    "line": 7,
                  },
                  "type": "BinaryExpression",
                },
                "operator": "/",
                "right": Object {
                  "end": Object {
                    "column": 30,
                    "line": 7,
                  },
                  "raw": "5",
                  "start": Object {
                    "column": 30,
                    "line": 7,
                  },
                  "type": "Literal",
                  "value": "5",
                },
                "start": Object {
                  "column": 16,
                  "line": 7,
                },
                "type": "BinaryExpression",
              },
              "operator": "+",
              "right": Object {
                "end": Object {
                  "column": 35,
                  "line": 7,
                },
                "raw": "32",
                "start": Object {
                  "column": 35,
                  "line": 7,
                },
                "type": "Literal",
                "value": "32",
              },
              "start": Object {
                "column": 15,
                "line": 7,
              },
              "type": "BinaryExpression",
            },
            "start": Object {
              "column": 2,
              "line": 7,
            },
            "type": "AssignmentExpression",
          },
          Object {
            "end": Object {
              "column": 63,
              "line": 8,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 8,
                  },
                  "raw": "\\"%.2f Celsius = %.2f Fahrenheit\\"",
                  "start": Object {
                    "column": 9,
                    "line": 8,
                  },
                  "type": "Literal",
                  "value": "\\"%.2f Celsius = %.2f Fahrenheit\\"",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 43,
                    "line": 8,
                  },
                  "name": "celsius",
                  "start": Object {
                    "column": 43,
                    "line": 8,
                  },
                  "type": "Identifier",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 52,
                    "line": 8,
                  },
                  "name": "fahrenheit",
                  "start": Object {
                    "column": 52,
                    "line": 8,
                  },
                  "type": "Identifier",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 62,
                "line": 8,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 8,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 9,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 9,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 9,
            },
            "start": Object {
              "column": 2,
              "line": 9,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 10,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 10,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 10,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  int list[] = {1, 2, 3};
  int i;
  for (i = 0; i < 3; i++) {
    list[i] = list[i + (-1) + 1] * 10;
  }
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int_ptr",
                  "isArray": true,
                  "isMemory": true,
                  "name": "list",
                  "pointerList": Array [],
                  "type": "Identifier",
                },
                "init": Object {
                  "expressions": Array [
                    Object {
                      "end": Object {
                        "column": 16,
                        "line": 3,
                      },
                      "raw": "1",
                      "start": Object {
                        "column": 16,
                        "line": 3,
                      },
                      "type": "Literal",
                      "value": "1",
                    },
                    Object {
                      "end": Object {
                        "column": 19,
                        "line": 3,
                      },
                      "raw": "2",
                      "start": Object {
                        "column": 19,
                        "line": 3,
                      },
                      "type": "Literal",
                      "value": "2",
                    },
                    Object {
                      "end": Object {
                        "column": 22,
                        "line": 3,
                      },
                      "raw": "3",
                      "start": Object {
                        "column": 22,
                        "line": 3,
                      },
                      "type": "Literal",
                      "value": "3",
                    },
                  ],
                  "type": "SequenceExpression",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 23,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "i",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "body": Object {
              "body": Array [
                Object {
                  "end": Object {
                    "column": 35,
                    "line": 6,
                  },
                  "left": Object {
                    "computed": true,
                    "end": Object {
                      "column": 10,
                      "line": 6,
                    },
                    "object": Object {
                      "datatype": "unknown",
                      "isArray": true,
                      "name": "list",
                      "type": "Identifier",
                    },
                    "optional": false,
                    "property": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 9,
                        "line": 6,
                      },
                      "name": "i",
                      "start": Object {
                        "column": 9,
                        "line": 6,
                      },
                      "type": "Identifier",
                    },
                    "start": Object {
                      "column": 4,
                      "line": 6,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": "=",
                  "right": Object {
                    "end": Object {
                      "column": 35,
                      "line": 6,
                    },
                    "left": Object {
                      "computed": true,
                      "end": Object {
                        "column": 31,
                        "line": 6,
                      },
                      "object": Object {
                        "datatype": "unknown",
                        "isArray": true,
                        "name": "list",
                        "type": "Identifier",
                      },
                      "optional": false,
                      "property": Object {
                        "end": Object {
                          "column": 30,
                          "line": 6,
                        },
                        "left": Object {
                          "end": Object {
                            "column": 26,
                            "line": 6,
                          },
                          "left": Object {
                            "datatype": "unknown",
                            "end": Object {
                              "column": 19,
                              "line": 6,
                            },
                            "name": "i",
                            "start": Object {
                              "column": 19,
                              "line": 6,
                            },
                            "type": "Identifier",
                          },
                          "operator": "+",
                          "right": Object {
                            "argument": Object {
                              "end": Object {
                                "column": 25,
                                "line": 6,
                              },
                              "raw": "1",
                              "start": Object {
                                "column": 25,
                                "line": 6,
                              },
                              "type": "Literal",
                              "value": "1",
                            },
                            "end": Object {
                              "column": 25,
                              "line": 6,
                            },
                            "operator": "-",
                            "prefix": true,
                            "start": Object {
                              "column": 24,
                              "line": 6,
                            },
                            "type": "UnaryExpression",
                          },
                          "start": Object {
                            "column": 19,
                            "line": 6,
                          },
                          "type": "BinaryExpression",
                        },
                        "operator": "+",
                        "right": Object {
                          "end": Object {
                            "column": 30,
                            "line": 6,
                          },
                          "raw": "1",
                          "start": Object {
                            "column": 30,
                            "line": 6,
                          },
                          "type": "Literal",
                          "value": "1",
                        },
                        "start": Object {
                          "column": 19,
                          "line": 6,
                        },
                        "type": "BinaryExpression",
                      },
                      "start": Object {
                        "column": 14,
                        "line": 6,
                      },
                      "type": "MemberExpression",
                    },
                    "operator": "*",
                    "right": Object {
                      "end": Object {
                        "column": 35,
                        "line": 6,
                      },
                      "raw": "10",
                      "start": Object {
                        "column": 35,
                        "line": 6,
                      },
                      "type": "Literal",
                      "value": "10",
                    },
                    "start": Object {
                      "column": 14,
                      "line": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "start": Object {
                    "column": 4,
                    "line": 6,
                  },
                  "type": "AssignmentExpression",
                },
              ],
              "end": Object {
                "column": 2,
                "line": 7,
              },
              "start": Object {
                "column": 26,
                "line": 5,
              },
              "type": "BlockStatement",
            },
            "end": Object {
              "column": 2,
              "line": 7,
            },
            "init": Object {
              "end": Object {
                "column": 11,
                "line": 5,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 7,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 7,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "operator": "=",
              "right": Object {
                "end": Object {
                  "column": 11,
                  "line": 5,
                },
                "raw": "0",
                "start": Object {
                  "column": 11,
                  "line": 5,
                },
                "type": "Literal",
                "value": "0",
              },
              "start": Object {
                "column": 7,
                "line": 5,
              },
              "type": "AssignmentExpression",
            },
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "test": Object {
              "end": Object {
                "column": 18,
                "line": 5,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 14,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 14,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": Object {
                "end": Object {
                  "column": 18,
                  "line": 5,
                },
                "raw": "3",
                "start": Object {
                  "column": 18,
                  "line": 5,
                },
                "type": "Literal",
                "value": "3",
              },
              "start": Object {
                "column": 14,
                "line": 5,
              },
              "type": "BinaryExpression",
            },
            "type": "ForStatement",
            "update": Object {
              "argument": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 21,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 21,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "end": Object {
                "column": 22,
                "line": 5,
              },
              "operator": "++",
              "prefix": false,
              "start": Object {
                "column": 21,
                "line": 5,
              },
              "type": "UpdateExpression",
            },
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 8,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 8,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 8,
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 9,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 9,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 9,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  int list[3] = { 1 };
  int i;
  for (i = 0; i < 3; i++) {
    list[i] = i * 10;
  }
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "arraySize": 3,
                  "datatype": "int_ptr",
                  "isArray": true,
                  "isMemory": true,
                  "name": "list",
                  "pointerList": Array [],
                  "type": "Identifier",
                },
                "init": Object {
                  "expressions": Array [
                    Object {
                      "end": Object {
                        "column": 18,
                        "line": 3,
                      },
                      "raw": "1",
                      "start": Object {
                        "column": 18,
                        "line": 3,
                      },
                      "type": "Literal",
                      "value": "1",
                    },
                  ],
                  "type": "SequenceExpression",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 20,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "i",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "body": Object {
              "body": Array [
                Object {
                  "end": Object {
                    "column": 18,
                    "line": 6,
                  },
                  "left": Object {
                    "computed": true,
                    "end": Object {
                      "column": 10,
                      "line": 6,
                    },
                    "object": Object {
                      "datatype": "unknown",
                      "isArray": true,
                      "name": "list",
                      "type": "Identifier",
                    },
                    "optional": false,
                    "property": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 9,
                        "line": 6,
                      },
                      "name": "i",
                      "start": Object {
                        "column": 9,
                        "line": 6,
                      },
                      "type": "Identifier",
                    },
                    "start": Object {
                      "column": 4,
                      "line": 6,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": "=",
                  "right": Object {
                    "end": Object {
                      "column": 18,
                      "line": 6,
                    },
                    "left": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 14,
                        "line": 6,
                      },
                      "name": "i",
                      "start": Object {
                        "column": 14,
                        "line": 6,
                      },
                      "type": "Identifier",
                    },
                    "operator": "*",
                    "right": Object {
                      "end": Object {
                        "column": 18,
                        "line": 6,
                      },
                      "raw": "10",
                      "start": Object {
                        "column": 18,
                        "line": 6,
                      },
                      "type": "Literal",
                      "value": "10",
                    },
                    "start": Object {
                      "column": 14,
                      "line": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "start": Object {
                    "column": 4,
                    "line": 6,
                  },
                  "type": "AssignmentExpression",
                },
              ],
              "end": Object {
                "column": 2,
                "line": 7,
              },
              "start": Object {
                "column": 26,
                "line": 5,
              },
              "type": "BlockStatement",
            },
            "end": Object {
              "column": 2,
              "line": 7,
            },
            "init": Object {
              "end": Object {
                "column": 11,
                "line": 5,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 7,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 7,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "operator": "=",
              "right": Object {
                "end": Object {
                  "column": 11,
                  "line": 5,
                },
                "raw": "0",
                "start": Object {
                  "column": 11,
                  "line": 5,
                },
                "type": "Literal",
                "value": "0",
              },
              "start": Object {
                "column": 7,
                "line": 5,
              },
              "type": "AssignmentExpression",
            },
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "test": Object {
              "end": Object {
                "column": 18,
                "line": 5,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 14,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 14,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": Object {
                "end": Object {
                  "column": 18,
                  "line": 5,
                },
                "raw": "3",
                "start": Object {
                  "column": 18,
                  "line": 5,
                },
                "type": "Literal",
                "value": "3",
              },
              "start": Object {
                "column": 14,
                "line": 5,
              },
              "type": "BinaryExpression",
            },
            "type": "ForStatement",
            "update": Object {
              "argument": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 21,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 21,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "end": Object {
                "column": 22,
                "line": 5,
              },
              "operator": "++",
              "prefix": false,
              "start": Object {
                "column": 21,
                "line": 5,
              },
              "type": "UpdateExpression",
            },
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 8,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 8,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 8,
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 9,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 9,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 9,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  int list[3];
  int i;
  for (i = 0; i < 3; i++) {
    list[i] = i * 10;
  }
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "arraySize": 3,
                  "datatype": "int_ptr",
                  "isArray": true,
                  "isMemory": true,
                  "name": "list",
                  "pointerList": Array [],
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 12,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "i",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "body": Object {
              "body": Array [
                Object {
                  "end": Object {
                    "column": 18,
                    "line": 6,
                  },
                  "left": Object {
                    "computed": true,
                    "end": Object {
                      "column": 10,
                      "line": 6,
                    },
                    "object": Object {
                      "datatype": "unknown",
                      "isArray": true,
                      "name": "list",
                      "type": "Identifier",
                    },
                    "optional": false,
                    "property": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 9,
                        "line": 6,
                      },
                      "name": "i",
                      "start": Object {
                        "column": 9,
                        "line": 6,
                      },
                      "type": "Identifier",
                    },
                    "start": Object {
                      "column": 4,
                      "line": 6,
                    },
                    "type": "MemberExpression",
                  },
                  "operator": "=",
                  "right": Object {
                    "end": Object {
                      "column": 18,
                      "line": 6,
                    },
                    "left": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 14,
                        "line": 6,
                      },
                      "name": "i",
                      "start": Object {
                        "column": 14,
                        "line": 6,
                      },
                      "type": "Identifier",
                    },
                    "operator": "*",
                    "right": Object {
                      "end": Object {
                        "column": 18,
                        "line": 6,
                      },
                      "raw": "10",
                      "start": Object {
                        "column": 18,
                        "line": 6,
                      },
                      "type": "Literal",
                      "value": "10",
                    },
                    "start": Object {
                      "column": 14,
                      "line": 6,
                    },
                    "type": "BinaryExpression",
                  },
                  "start": Object {
                    "column": 4,
                    "line": 6,
                  },
                  "type": "AssignmentExpression",
                },
              ],
              "end": Object {
                "column": 2,
                "line": 7,
              },
              "start": Object {
                "column": 26,
                "line": 5,
              },
              "type": "BlockStatement",
            },
            "end": Object {
              "column": 2,
              "line": 7,
            },
            "init": Object {
              "end": Object {
                "column": 11,
                "line": 5,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 7,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 7,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "operator": "=",
              "right": Object {
                "end": Object {
                  "column": 11,
                  "line": 5,
                },
                "raw": "0",
                "start": Object {
                  "column": 11,
                  "line": 5,
                },
                "type": "Literal",
                "value": "0",
              },
              "start": Object {
                "column": 7,
                "line": 5,
              },
              "type": "AssignmentExpression",
            },
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "test": Object {
              "end": Object {
                "column": 18,
                "line": 5,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 14,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 14,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "operator": "<",
              "right": Object {
                "end": Object {
                  "column": 18,
                  "line": 5,
                },
                "raw": "3",
                "start": Object {
                  "column": 18,
                  "line": 5,
                },
                "type": "Literal",
                "value": "3",
              },
              "start": Object {
                "column": 14,
                "line": 5,
              },
              "type": "BinaryExpression",
            },
            "type": "ForStatement",
            "update": Object {
              "argument": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 21,
                  "line": 5,
                },
                "name": "i",
                "start": Object {
                  "column": 21,
                  "line": 5,
                },
                "type": "Identifier",
              },
              "end": Object {
                "column": 22,
                "line": 5,
              },
              "operator": "++",
              "prefix": false,
              "start": Object {
                "column": 21,
                "line": 5,
              },
              "type": "UpdateExpression",
            },
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 8,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 8,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 8,
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 9,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 9,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 9,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  int num;
  int i;
  int fact = 1;
  printf("Enter a number: ");
  scanf("%d", &num);
  for(i=1; i<=num; i++) {
      fact = fact * i;
  }
  printf("Factorial of %d is %d", num, fact);
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "num",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "i",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "fact",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "init": Object {
                  "end": Object {
                    "column": 13,
                    "line": 5,
                  },
                  "raw": "1",
                  "start": Object {
                    "column": 13,
                    "line": 5,
                  },
                  "type": "Literal",
                  "value": "1",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 13,
              "line": 5,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "end": Object {
              "column": 28,
              "line": 6,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 6,
                  },
                  "raw": "\\"Enter a number: \\"",
                  "start": Object {
                    "column": 9,
                    "line": 6,
                  },
                  "type": "Literal",
                  "value": "\\"Enter a number: \\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 27,
                "line": 6,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 6,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 6,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 19,
              "line": 7,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 8,
                    "line": 7,
                  },
                  "raw": "\\"%d\\"",
                  "start": Object {
                    "column": 8,
                    "line": 7,
                  },
                  "type": "Literal",
                  "value": "\\"%d\\"",
                },
                Object {
                  "end": Object {
                    "column": 15,
                    "line": 7,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 15,
                      "line": 7,
                    },
                    "name": "num",
                    "start": Object {
                      "column": 15,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 14,
                    "line": 7,
                  },
                  "type": "AddressofExpression",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "scanf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 18,
                "line": 7,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 7,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 7,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "body": Object {
              "body": Array [
                Object {
                  "end": Object {
                    "column": 20,
                    "line": 9,
                  },
                  "left": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 6,
                      "line": 9,
                    },
                    "name": "fact",
                    "start": Object {
                      "column": 6,
                      "line": 9,
                    },
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "right": Object {
                    "end": Object {
                      "column": 20,
                      "line": 9,
                    },
                    "left": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 13,
                        "line": 9,
                      },
                      "name": "fact",
                      "start": Object {
                        "column": 13,
                        "line": 9,
                      },
                      "type": "Identifier",
                    },
                    "operator": "*",
                    "right": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 20,
                        "line": 9,
                      },
                      "name": "i",
                      "start": Object {
                        "column": 20,
                        "line": 9,
                      },
                      "type": "Identifier",
                    },
                    "start": Object {
                      "column": 13,
                      "line": 9,
                    },
                    "type": "BinaryExpression",
                  },
                  "start": Object {
                    "column": 6,
                    "line": 9,
                  },
                  "type": "AssignmentExpression",
                },
              ],
              "end": Object {
                "column": 2,
                "line": 10,
              },
              "start": Object {
                "column": 24,
                "line": 8,
              },
              "type": "BlockStatement",
            },
            "end": Object {
              "column": 2,
              "line": 10,
            },
            "init": Object {
              "end": Object {
                "column": 8,
                "line": 8,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 6,
                  "line": 8,
                },
                "name": "i",
                "start": Object {
                  "column": 6,
                  "line": 8,
                },
                "type": "Identifier",
              },
              "operator": "=",
              "right": Object {
                "end": Object {
                  "column": 8,
                  "line": 8,
                },
                "raw": "1",
                "start": Object {
                  "column": 8,
                  "line": 8,
                },
                "type": "Literal",
                "value": "1",
              },
              "start": Object {
                "column": 6,
                "line": 8,
              },
              "type": "AssignmentExpression",
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "test": Object {
              "end": Object {
                "column": 14,
                "line": 8,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 11,
                  "line": 8,
                },
                "name": "i",
                "start": Object {
                  "column": 11,
                  "line": 8,
                },
                "type": "Identifier",
              },
              "operator": "<=",
              "right": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 14,
                  "line": 8,
                },
                "name": "num",
                "start": Object {
                  "column": 14,
                  "line": 8,
                },
                "type": "Identifier",
              },
              "start": Object {
                "column": 11,
                "line": 8,
              },
              "type": "BinaryExpression",
            },
            "type": "ForStatement",
            "update": Object {
              "argument": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 19,
                  "line": 8,
                },
                "name": "i",
                "start": Object {
                  "column": 19,
                  "line": 8,
                },
                "type": "Identifier",
              },
              "end": Object {
                "column": 20,
                "line": 8,
              },
              "operator": "++",
              "prefix": false,
              "start": Object {
                "column": 19,
                "line": 8,
              },
              "type": "UpdateExpression",
            },
          },
          Object {
            "end": Object {
              "column": 44,
              "line": 11,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 11,
                  },
                  "raw": "\\"Factorial of %d is %d\\"",
                  "start": Object {
                    "column": 9,
                    "line": 11,
                  },
                  "type": "Literal",
                  "value": "\\"Factorial of %d is %d\\"",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 34,
                    "line": 11,
                  },
                  "name": "num",
                  "start": Object {
                    "column": 34,
                    "line": 11,
                  },
                  "type": "Identifier",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 39,
                    "line": 11,
                  },
                  "name": "fact",
                  "start": Object {
                    "column": 39,
                    "line": 11,
                  },
                  "type": "Identifier",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 43,
                "line": 11,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 11,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 11,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 12,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 12,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 12,
            },
            "start": Object {
              "column": 2,
              "line": 12,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 13,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 13,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 13,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  int num;
  int i;
  int t1=0;
  int t2=1;
  int nextTerm;
  printf("Enter the number of terms: ");
  scanf("%d", &num);
  printf("Fibonacci Series: ");
  for(i=1; i<=num; i++) {
      printf("%d, ", t1);
      nextTerm = t1 + t2;
      t1 = t2;
      t2 = nextTerm;
  }
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "num",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "i",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "t1",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "init": Object {
                  "end": Object {
                    "column": 9,
                    "line": 5,
                  },
                  "raw": "0",
                  "start": Object {
                    "column": 9,
                    "line": 5,
                  },
                  "type": "Literal",
                  "value": "0",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 9,
              "line": 5,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "t2",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "init": Object {
                  "end": Object {
                    "column": 9,
                    "line": 6,
                  },
                  "raw": "1",
                  "start": Object {
                    "column": 9,
                    "line": 6,
                  },
                  "type": "Literal",
                  "value": "1",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 9,
              "line": 6,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 6,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "nextTerm",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 7,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 7,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "end": Object {
              "column": 39,
              "line": 8,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 8,
                  },
                  "raw": "\\"Enter the number of terms: \\"",
                  "start": Object {
                    "column": 9,
                    "line": 8,
                  },
                  "type": "Literal",
                  "value": "\\"Enter the number of terms: \\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 38,
                "line": 8,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 8,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 19,
              "line": 9,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 8,
                    "line": 9,
                  },
                  "raw": "\\"%d\\"",
                  "start": Object {
                    "column": 8,
                    "line": 9,
                  },
                  "type": "Literal",
                  "value": "\\"%d\\"",
                },
                Object {
                  "end": Object {
                    "column": 15,
                    "line": 9,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 15,
                      "line": 9,
                    },
                    "name": "num",
                    "start": Object {
                      "column": 15,
                      "line": 9,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 14,
                    "line": 9,
                  },
                  "type": "AddressofExpression",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "scanf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 18,
                "line": 9,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 9,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 9,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 30,
              "line": 10,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 10,
                  },
                  "raw": "\\"Fibonacci Series: \\"",
                  "start": Object {
                    "column": 9,
                    "line": 10,
                  },
                  "type": "Literal",
                  "value": "\\"Fibonacci Series: \\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 29,
                "line": 10,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 10,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 10,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "body": Object {
              "body": Array [
                Object {
                  "end": Object {
                    "column": 24,
                    "line": 12,
                  },
                  "expression": Object {
                    "arguments": Array [
                      Object {
                        "end": Object {
                          "column": 13,
                          "line": 12,
                        },
                        "raw": "\\"%d, \\"",
                        "start": Object {
                          "column": 13,
                          "line": 12,
                        },
                        "type": "Literal",
                        "value": "\\"%d, \\"",
                      },
                      Object {
                        "datatype": "unknown",
                        "end": Object {
                          "column": 21,
                          "line": 12,
                        },
                        "name": "t1",
                        "start": Object {
                          "column": 21,
                          "line": 12,
                        },
                        "type": "Identifier",
                      },
                    ],
                    "callee": Object {
                      "datatype": "unknown",
                      "name": "printf",
                      "type": "Identifier",
                    },
                    "end": Object {
                      "column": 23,
                      "line": 12,
                    },
                    "optional": false,
                    "start": Object {
                      "column": 6,
                      "line": 12,
                    },
                    "type": "CallExpression",
                  },
                  "start": Object {
                    "column": 6,
                    "line": 12,
                  },
                  "type": "ExpressionStatement",
                },
                Object {
                  "end": Object {
                    "column": 22,
                    "line": 13,
                  },
                  "left": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 6,
                      "line": 13,
                    },
                    "name": "nextTerm",
                    "start": Object {
                      "column": 6,
                      "line": 13,
                    },
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "right": Object {
                    "end": Object {
                      "column": 22,
                      "line": 13,
                    },
                    "left": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 17,
                        "line": 13,
                      },
                      "name": "t1",
                      "start": Object {
                        "column": 17,
                        "line": 13,
                      },
                      "type": "Identifier",
                    },
                    "operator": "+",
                    "right": Object {
                      "datatype": "unknown",
                      "end": Object {
                        "column": 22,
                        "line": 13,
                      },
                      "name": "t2",
                      "start": Object {
                        "column": 22,
                        "line": 13,
                      },
                      "type": "Identifier",
                    },
                    "start": Object {
                      "column": 17,
                      "line": 13,
                    },
                    "type": "BinaryExpression",
                  },
                  "start": Object {
                    "column": 6,
                    "line": 13,
                  },
                  "type": "AssignmentExpression",
                },
                Object {
                  "end": Object {
                    "column": 11,
                    "line": 14,
                  },
                  "left": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 6,
                      "line": 14,
                    },
                    "name": "t1",
                    "start": Object {
                      "column": 6,
                      "line": 14,
                    },
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "right": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 11,
                      "line": 14,
                    },
                    "name": "t2",
                    "start": Object {
                      "column": 11,
                      "line": 14,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 6,
                    "line": 14,
                  },
                  "type": "AssignmentExpression",
                },
                Object {
                  "end": Object {
                    "column": 11,
                    "line": 15,
                  },
                  "left": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 6,
                      "line": 15,
                    },
                    "name": "t2",
                    "start": Object {
                      "column": 6,
                      "line": 15,
                    },
                    "type": "Identifier",
                  },
                  "operator": "=",
                  "right": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 11,
                      "line": 15,
                    },
                    "name": "nextTerm",
                    "start": Object {
                      "column": 11,
                      "line": 15,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 6,
                    "line": 15,
                  },
                  "type": "AssignmentExpression",
                },
              ],
              "end": Object {
                "column": 2,
                "line": 16,
              },
              "start": Object {
                "column": 24,
                "line": 11,
              },
              "type": "BlockStatement",
            },
            "end": Object {
              "column": 2,
              "line": 16,
            },
            "init": Object {
              "end": Object {
                "column": 8,
                "line": 11,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 6,
                  "line": 11,
                },
                "name": "i",
                "start": Object {
                  "column": 6,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "operator": "=",
              "right": Object {
                "end": Object {
                  "column": 8,
                  "line": 11,
                },
                "raw": "1",
                "start": Object {
                  "column": 8,
                  "line": 11,
                },
                "type": "Literal",
                "value": "1",
              },
              "start": Object {
                "column": 6,
                "line": 11,
              },
              "type": "AssignmentExpression",
            },
            "start": Object {
              "column": 2,
              "line": 11,
            },
            "test": Object {
              "end": Object {
                "column": 14,
                "line": 11,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 11,
                  "line": 11,
                },
                "name": "i",
                "start": Object {
                  "column": 11,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "operator": "<=",
              "right": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 14,
                  "line": 11,
                },
                "name": "num",
                "start": Object {
                  "column": 14,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "start": Object {
                "column": 11,
                "line": 11,
              },
              "type": "BinaryExpression",
            },
            "type": "ForStatement",
            "update": Object {
              "argument": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 19,
                  "line": 11,
                },
                "name": "i",
                "start": Object {
                  "column": 19,
                  "line": 11,
                },
                "type": "Identifier",
              },
              "end": Object {
                "column": 20,
                "line": 11,
              },
              "operator": "++",
              "prefix": false,
              "start": Object {
                "column": 19,
                "line": 11,
              },
              "type": "UpdateExpression",
            },
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 17,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 17,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 17,
            },
            "start": Object {
              "column": 2,
              "line": 17,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 18,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 18,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 18,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  int num1;
  int num2;
  int sum;
  printf("Enter first number: ");
  scanf("%d", &num1);
  printf("Enter second number: ");
  scanf("%d", &num2);
  sum = num1 + num2;
  printf("Sum is %d", sum);
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "num1",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "num2",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "sum",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 5,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "end": Object {
              "column": 32,
              "line": 6,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 6,
                  },
                  "raw": "\\"Enter first number: \\"",
                  "start": Object {
                    "column": 9,
                    "line": 6,
                  },
                  "type": "Literal",
                  "value": "\\"Enter first number: \\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 31,
                "line": 6,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 6,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 6,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 20,
              "line": 7,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 8,
                    "line": 7,
                  },
                  "raw": "\\"%d\\"",
                  "start": Object {
                    "column": 8,
                    "line": 7,
                  },
                  "type": "Literal",
                  "value": "\\"%d\\"",
                },
                Object {
                  "end": Object {
                    "column": 15,
                    "line": 7,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 15,
                      "line": 7,
                    },
                    "name": "num1",
                    "start": Object {
                      "column": 15,
                      "line": 7,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 14,
                    "line": 7,
                  },
                  "type": "AddressofExpression",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "scanf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 19,
                "line": 7,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 7,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 7,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 33,
              "line": 8,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 8,
                  },
                  "raw": "\\"Enter second number: \\"",
                  "start": Object {
                    "column": 9,
                    "line": 8,
                  },
                  "type": "Literal",
                  "value": "\\"Enter second number: \\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 32,
                "line": 8,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 8,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 20,
              "line": 9,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 8,
                    "line": 9,
                  },
                  "raw": "\\"%d\\"",
                  "start": Object {
                    "column": 8,
                    "line": 9,
                  },
                  "type": "Literal",
                  "value": "\\"%d\\"",
                },
                Object {
                  "end": Object {
                    "column": 15,
                    "line": 9,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 15,
                      "line": 9,
                    },
                    "name": "num2",
                    "start": Object {
                      "column": 15,
                      "line": 9,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 14,
                    "line": 9,
                  },
                  "type": "AddressofExpression",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "scanf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 19,
                "line": 9,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 9,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 9,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 15,
              "line": 10,
            },
            "left": Object {
              "datatype": "unknown",
              "end": Object {
                "column": 2,
                "line": 10,
              },
              "name": "sum",
              "start": Object {
                "column": 2,
                "line": 10,
              },
              "type": "Identifier",
            },
            "operator": "=",
            "right": Object {
              "end": Object {
                "column": 15,
                "line": 10,
              },
              "left": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 8,
                  "line": 10,
                },
                "name": "num1",
                "start": Object {
                  "column": 8,
                  "line": 10,
                },
                "type": "Identifier",
              },
              "operator": "+",
              "right": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 15,
                  "line": 10,
                },
                "name": "num2",
                "start": Object {
                  "column": 15,
                  "line": 10,
                },
                "type": "Identifier",
              },
              "start": Object {
                "column": 8,
                "line": 10,
              },
              "type": "BinaryExpression",
            },
            "start": Object {
              "column": 2,
              "line": 10,
            },
            "type": "AssignmentExpression",
          },
          Object {
            "end": Object {
              "column": 26,
              "line": 11,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 11,
                  },
                  "raw": "\\"Sum is %d\\"",
                  "start": Object {
                    "column": 9,
                    "line": 11,
                  },
                  "type": "Literal",
                  "value": "\\"Sum is %d\\"",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 22,
                    "line": 11,
                  },
                  "name": "sum",
                  "start": Object {
                    "column": 22,
                    "line": 11,
                  },
                  "type": "Identifier",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 25,
                "line": 11,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 11,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 11,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 12,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 12,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 12,
            },
            "start": Object {
              "column": 2,
              "line": 12,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 13,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 13,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 13,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  int num1;
  int num2;
  printf("Enter two numbers: ");
  scanf("%d %d", &num1, &num2);
  printf("Before swap: num1 = %d, num2 = %d\\n", num1, num2);
  swap(&num1, &num2);
  printf("After swap: num1 = %d, num2 = %d\\n", num1, num2);
  return 0;
}
void swap(int *a, int *b) {
  int temp;
  temp = *a;
  *a = *b;
  *b = temp;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "num1",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 3,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "num2",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 4,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "end": Object {
              "column": 31,
              "line": 5,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 5,
                  },
                  "raw": "\\"Enter two numbers: \\"",
                  "start": Object {
                    "column": 9,
                    "line": 5,
                  },
                  "type": "Literal",
                  "value": "\\"Enter two numbers: \\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 30,
                "line": 5,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 5,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 5,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 30,
              "line": 6,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 8,
                    "line": 6,
                  },
                  "raw": "\\"%d %d\\"",
                  "start": Object {
                    "column": 8,
                    "line": 6,
                  },
                  "type": "Literal",
                  "value": "\\"%d %d\\"",
                },
                Object {
                  "end": Object {
                    "column": 18,
                    "line": 6,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 18,
                      "line": 6,
                    },
                    "name": "num1",
                    "start": Object {
                      "column": 18,
                      "line": 6,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 17,
                    "line": 6,
                  },
                  "type": "AddressofExpression",
                },
                Object {
                  "end": Object {
                    "column": 25,
                    "line": 6,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 25,
                      "line": 6,
                    },
                    "name": "num2",
                    "start": Object {
                      "column": 25,
                      "line": 6,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 24,
                    "line": 6,
                  },
                  "type": "AddressofExpression",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "scanf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 29,
                "line": 6,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 6,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 6,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 59,
              "line": 7,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 7,
                  },
                  "raw": "\\"Before swap: num1 = %d, num2 = %d\\\\n\\"",
                  "start": Object {
                    "column": 9,
                    "line": 7,
                  },
                  "type": "Literal",
                  "value": "\\"Before swap: num1 = %d, num2 = %d\\\\n\\"",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 48,
                    "line": 7,
                  },
                  "name": "num1",
                  "start": Object {
                    "column": 48,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 54,
                    "line": 7,
                  },
                  "name": "num2",
                  "start": Object {
                    "column": 54,
                    "line": 7,
                  },
                  "type": "Identifier",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 58,
                "line": 7,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 7,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 7,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 20,
              "line": 8,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 8,
                    "line": 8,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 8,
                      "line": 8,
                    },
                    "name": "num1",
                    "start": Object {
                      "column": 8,
                      "line": 8,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 7,
                    "line": 8,
                  },
                  "type": "AddressofExpression",
                },
                Object {
                  "end": Object {
                    "column": 15,
                    "line": 8,
                  },
                  "expression": Object {
                    "datatype": "unknown",
                    "end": Object {
                      "column": 15,
                      "line": 8,
                    },
                    "name": "num2",
                    "start": Object {
                      "column": 15,
                      "line": 8,
                    },
                    "type": "Identifier",
                  },
                  "start": Object {
                    "column": 14,
                    "line": 8,
                  },
                  "type": "AddressofExpression",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "swap",
                "type": "Identifier",
              },
              "end": Object {
                "column": 19,
                "line": 8,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 8,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 8,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "end": Object {
              "column": 58,
              "line": 9,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 9,
                  },
                  "raw": "\\"After swap: num1 = %d, num2 = %d\\\\n\\"",
                  "start": Object {
                    "column": 9,
                    "line": 9,
                  },
                  "type": "Literal",
                  "value": "\\"After swap: num1 = %d, num2 = %d\\\\n\\"",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 47,
                    "line": 9,
                  },
                  "name": "num1",
                  "start": Object {
                    "column": 47,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
                Object {
                  "datatype": "unknown",
                  "end": Object {
                    "column": 53,
                    "line": 9,
                  },
                  "name": "num2",
                  "start": Object {
                    "column": 53,
                    "line": 9,
                  },
                  "type": "Identifier",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 57,
                "line": 9,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 9,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 9,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 10,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 10,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 10,
            },
            "start": Object {
              "column": 2,
              "line": 10,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 11,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 11,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
    Object {
      "body": Object {
        "body": Array [
          Object {
            "declarations": Array [
              Object {
                "id": Object {
                  "datatype": "int",
                  "isArray": false,
                  "isMemory": false,
                  "name": "temp",
                  "pointerList": undefined,
                  "type": "Identifier",
                },
                "type": "VariableDeclarator",
              },
            ],
            "end": Object {
              "column": 6,
              "line": 13,
            },
            "kind": "var",
            "start": Object {
              "column": 2,
              "line": 13,
            },
            "type": "VariableDeclaration",
          },
          Object {
            "end": Object {
              "column": 10,
              "line": 14,
            },
            "left": Object {
              "datatype": "unknown",
              "end": Object {
                "column": 2,
                "line": 14,
              },
              "name": "temp",
              "start": Object {
                "column": 2,
                "line": 14,
              },
              "type": "Identifier",
            },
            "operator": "=",
            "right": Object {
              "end": Object {
                "column": 10,
                "line": 14,
              },
              "expression": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 10,
                  "line": 14,
                },
                "name": "a",
                "start": Object {
                  "column": 10,
                  "line": 14,
                },
                "type": "Identifier",
              },
              "start": Object {
                "column": 9,
                "line": 14,
              },
              "type": "DereferenceExpression",
            },
            "start": Object {
              "column": 2,
              "line": 14,
            },
            "type": "AssignmentExpression",
          },
          Object {
            "derefChain": Array [
              "*",
            ],
            "end": Object {
              "column": 8,
              "line": 15,
            },
            "left": Object {
              "datatype": "unknown",
              "end": Object {
                "column": 3,
                "line": 15,
              },
              "name": "a",
              "start": Object {
                "column": 3,
                "line": 15,
              },
              "type": "Identifier",
            },
            "operator": "=",
            "right": Object {
              "end": Object {
                "column": 8,
                "line": 15,
              },
              "expression": Object {
                "datatype": "unknown",
                "end": Object {
                  "column": 8,
                  "line": 15,
                },
                "name": "b",
                "start": Object {
                  "column": 8,
                  "line": 15,
                },
                "type": "Identifier",
              },
              "start": Object {
                "column": 7,
                "line": 15,
              },
              "type": "DereferenceExpression",
            },
            "start": Object {
              "column": 2,
              "line": 15,
            },
            "type": "DerefLeftAssignmentExpression",
          },
          Object {
            "derefChain": Array [
              "*",
            ],
            "end": Object {
              "column": 7,
              "line": 16,
            },
            "left": Object {
              "datatype": "unknown",
              "end": Object {
                "column": 3,
                "line": 16,
              },
              "name": "b",
              "start": Object {
                "column": 3,
                "line": 16,
              },
              "type": "Identifier",
            },
            "operator": "=",
            "right": Object {
              "datatype": "unknown",
              "end": Object {
                "column": 7,
                "line": 16,
              },
              "name": "temp",
              "start": Object {
                "column": 7,
                "line": 16,
              },
              "type": "Identifier",
            },
            "start": Object {
              "column": 2,
              "line": 16,
            },
            "type": "DerefLeftAssignmentExpression",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 17,
        },
        "start": Object {
          "column": 26,
          "line": 12,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 17,
      },
      "id": Object {
        "datatype": "void",
        "isMemory": false,
        "name": "swap",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [
        Object {
          "datatype": "int_ptr",
          "isMemory": true,
          "name": "a",
          "pointerList": Array [
            "*",
          ],
          "type": "Identifier",
        },
        Object {
          "datatype": "int_ptr",
          "isMemory": true,
          "name": "b",
          "pointerList": Array [
            "*",
          ],
          "type": "Identifier",
        },
      ],
      "start": Object {
        "column": 0,
        "line": 12,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 17,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;

exports[`SamplePrograms When_'
int main() {
  printf("Hello, World!");
  return 0;
}
'_Should_ParseSuccessfully 1`] = `
Object {
  "body": Array [
    Object {
      "body": Object {
        "body": Array [
          Object {
            "end": Object {
              "column": 25,
              "line": 3,
            },
            "expression": Object {
              "arguments": Array [
                Object {
                  "end": Object {
                    "column": 9,
                    "line": 3,
                  },
                  "raw": "\\"Hello, World!\\"",
                  "start": Object {
                    "column": 9,
                    "line": 3,
                  },
                  "type": "Literal",
                  "value": "\\"Hello, World!\\"",
                },
              ],
              "callee": Object {
                "datatype": "unknown",
                "name": "printf",
                "type": "Identifier",
              },
              "end": Object {
                "column": 24,
                "line": 3,
              },
              "optional": false,
              "start": Object {
                "column": 2,
                "line": 3,
              },
              "type": "CallExpression",
            },
            "start": Object {
              "column": 2,
              "line": 3,
            },
            "type": "ExpressionStatement",
          },
          Object {
            "argument": Object {
              "end": Object {
                "column": 9,
                "line": 4,
              },
              "raw": "0",
              "start": Object {
                "column": 9,
                "line": 4,
              },
              "type": "Literal",
              "value": "0",
            },
            "end": Object {
              "column": 10,
              "line": 4,
            },
            "start": Object {
              "column": 2,
              "line": 4,
            },
            "type": "ReturnStatement",
          },
        ],
        "end": Object {
          "column": 0,
          "line": 5,
        },
        "start": Object {
          "column": 11,
          "line": 2,
        },
        "type": "BlockStatement",
      },
      "end": Object {
        "column": 0,
        "line": 5,
      },
      "id": Object {
        "datatype": "int",
        "isMemory": false,
        "name": "main",
        "pointerList": Array [],
        "type": "Identifier",
      },
      "params": Array [],
      "start": Object {
        "column": 0,
        "line": 2,
      },
      "type": "FunctionDeclaration",
    },
  ],
  "end": Object {
    "column": 0,
    "line": 5,
  },
  "sourceType": "script",
  "start": Object {
    "column": 0,
    "line": 2,
  },
  "type": "Program",
}
`;
